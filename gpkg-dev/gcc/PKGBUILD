# The original PKGBUILD was taken from the gitlab.archlinux.org/archlinux/packaging repo:
# - https://gitlab.archlinux.org/archlinux/packaging/packages/gcc/-/blob/main/PKGBUILD

pkgname=(gcc-glibc gcc-libs)
pkgver=13.2.0
pkgrel=0
pkgdesc='The GNU Compiler Collection'
arch=(any)
url='https://gcc.gnu.org/'
license=(GPL LGPL FDL)
options=(!emptydirs !strip staticlibs)
source=(https://ftp.gnu.org/gnu/gcc/gcc-$pkgver/gcc-$pkgver.tar.xz
        c89 c99
        collect2.cc.patch
        gcc.cc.patch
        set_glibc_dynamic_linker.patch)
_libdir=data/data/com.termux.x11/files/usr/glibc/lib/gcc/$GPKG_DEV_TARGET/${pkgver%%+*}
sha256sums=('e275e76442a6067341a27f04c5c6b83d8613144004c0413528863dc6b5c743da'
            'd87254ee2c816aee66b00dd5002966cf3fe9aca4969eaf160c47150583357790'
            '9ad6d475acf0b19ca0e420f32867c6a5186ffbae50481ec64a140165f8988b60'
            '8d9f0c6cd1c57e623ba9b054f69185e4fb4717cc3af61c19d191948270042d6c'
            'e146e388b1b024795b82539f293df322a70e16462f72bf5efc39e41e72140c8b'
            'cd383a4a1916f4b3102f21c640d6116f697e0ef7cde5f705d83035849c200ec6')
groups=('gpkg-dev')

prepare() {
  for i in *.patch; do
    patch -Np1 -i ${srcdir}/$i
  done

  cd gcc-${pkgver}
  sed -i '/m64=/s/lib64/lib/' gcc/config/i386/t-linux64
  sed -i '/lp64=/s/lib64/lib/' gcc/config/aarch64/t-aarch64-linux

  mkdir -p "$srcdir"/gcc-build
}

build() {
  cd gcc-build

  CFLAGS=${CFLAGS/-Werror=format-security/}
  CXXFLAGS=${CXXFLAGS/-Werror=format-security/}

  CONFIGFLAG=""
  case "$CARCH" in
    "aarch64") CONFIGFLAG="--with-arch=armv8-a --enable-fix-cortex-a53-835769 --enable-fix-cortex-a53-843419";;
    "armv7h") CONFIGFLAG="--with-arch=armv7-a --with-float=hard --with-fpu=neon"
              CFLAGS+=" -lm";;
    "x86_64") CONFIGFLAG="--with-arch=x86-64";;
    "i686") CONFIGFLAG="--with-arch=i686"
            CFLAGS+=" -m32";;
  esac

  "$srcdir"/gcc-${pkgver}/configure \
    --host=${GPKG_DEV_TARGET} \
    --build=${GPKG_DEV_TARGET} \
    --prefix=$GLIBC_PREFIX \
    --libdir=$GLIBC_PREFIX/lib \
    --libexecdir=$GLIBC_PREFIX/lib \
    --mandir=$GLIBC_PREFIX/share/man \
    --infodir=$GLIBC_PREFIX/share/info \
    --with-bugurl=https://github.com/termux-pacman/glibc-packages/issues \
    --with-gmp=$GLIBC_PREFIX \
    --with-mpfr=$GLIBC_PREFIX \
    --with-mpc=$GLIBC_PREFIX \
    $CONFIGFLAG \
    --disable-multilib \
    --disable-bootstrap \
    --disable-nls \
    --enable-default-pie \
    --enable-languages=c,c++ \
    --with-system-zlib \
    --enable-__cxa_atexit \
    --enable-linker-build-id \
    --enable-plugin \
    --with-linker-hash-style=gnu \
    --enable-gnu-indirect-function \
    --disable-werror \
    --disable-checking \
    --disable-static \
    --enable-host-shared \
    --disable-libssp \
    --disable-libstdcxx-pch \
    LD_FOR_TARGET="$GLIBC_PREFIX/bin/ld"

  make
}

package_gcc-libs() {
  pkgdesc='Runtime libraries shipped by GCC'
  options=(!emptydirs !strip)

  cd gcc-build
  make -C $GPKG_DEV_TARGET/libgcc DESTDIR="$pkgdir" install-shared
  rm -f "$pkgdir/$_libdir/libgcc_eh.a"

  for lib in libatomic \
             libgomp \
             libitm \
             libquadmath \
             libsanitizer/{a,l,ub}san \
             libstdc++-v3/src \
             libvtv; do
    make -C $GPKG_DEV_TARGET/$lib DESTDIR="$pkgdir" install-toolexeclibLTLIBRARIES
  done

  if [[ $CARCH == "x86_64" || $CARCH == "aarch64" ]]; then
    make -C $GPKG_DEV_TARGET/libsanitizer/tsan DESTDIR="$pkgdir" install-toolexeclibLTLIBRARIES
  fi

  make -C $GPKG_DEV_TARGET/libstdc++-v3/po DESTDIR="$pkgdir" install

  for lib in libgomp \
             libitm \
             libquadmath; do
    make -C $GPKG_DEV_TARGET/$lib DESTDIR="$pkgdir" install-info
  done

  # Install Runtime Library Exception
  install -Dm644 "$srcdir/gcc-${pkgver}/COPYING.RUNTIME" \
    "$pkgdir/$GLIBC_PREFIX/share/licenses/gcc-libs/RUNTIME.LIBRARY.EXCEPTION"

  rm -f "${pkgdir}"/$GLIBC_PREFIX/share/info/dir
}

package_gcc-glibc() {
  pkgdesc="The GNU Compiler Collection - C and C++ frontends"
  options=(!emptydirs)

  cd gcc-build

  make -C gcc DESTDIR="$pkgdir" install-driver install-cpp install-gcc-ar \
    c++.install-common install-headers install-plugin install-lto-wrapper

  install -m755 -t "$pkgdir/$GLIBC_PREFIX/bin/" gcc/gcov{,-tool}
  install -m755 -t "$pkgdir/${_libdir}/" gcc/{cc1,cc1plus,collect2,lto1}

  make -C $GPKG_DEV_TARGET/libgcc DESTDIR="$pkgdir" install
  rm -f "$pkgdir"/$GLIBC_PREFIX/lib/libgcc_s.so*

  make -C $GPKG_DEV_TARGET/libstdc++-v3/src DESTDIR="$pkgdir" install
  make -C $GPKG_DEV_TARGET/libstdc++-v3/include DESTDIR="$pkgdir" install
  make -C $GPKG_DEV_TARGET/libstdc++-v3/libsupc++ DESTDIR="$pkgdir" install
  make -C $GPKG_DEV_TARGET/libstdc++-v3/python DESTDIR="$pkgdir" install

  make DESTDIR="$pkgdir" install-libcc1
  if [ -f "$pkgdir"/$GLIBC_PREFIX/lib/libstdc++.so.6.*-gdb.py ]; then
    install -d "$pkgdir/$GLIBC_PREFIX/share/gdb/auto-load/usr/lib"
    mv "$pkgdir"/$GLIBC_PREFIX/lib/libstdc++.so.6.*-gdb.py \
      "$pkgdir/$GLIBC_PREFIX/share/gdb/auto-load/usr/lib/"
  fi
  rm "$pkgdir"/$GLIBC_PREFIX/lib/libstdc++.so* || true

  make DESTDIR="$pkgdir" install-fixincludes
  make -C gcc DESTDIR="$pkgdir" install-mkheaders

  make -C lto-plugin DESTDIR="$pkgdir" install
  install -dm755 "$pkgdir"/$GLIBC_PREFIX/lib/bfd-plugins/
  ln -s /${_libdir}/liblto_plugin.so \
    "$pkgdir/$GLIBC_PREFIX/lib/bfd-plugins/"

  make -C $GPKG_DEV_TARGET/libgomp DESTDIR="$pkgdir" install-nodist_{libsubinclude,toolexeclib}HEADERS
  make -C $GPKG_DEV_TARGET/libitm DESTDIR="$pkgdir" install-nodist_toolexeclibHEADERS
  make -C $GPKG_DEV_TARGET/libquadmath DESTDIR="$pkgdir" install-nodist_libsubincludeHEADERS
  make -C $GPKG_DEV_TARGET/libsanitizer DESTDIR="$pkgdir" install-nodist_{saninclude,toolexeclib}HEADERS
  make -C $GPKG_DEV_TARGET/libsanitizer/asan DESTDIR="$pkgdir" install-nodist_toolexeclibHEADERS
  if [[ $CARCH == "aarch64" ]]; then
    make -C $GPKG_DEV_TARGET/libsanitizer/tsan DESTDIR="$pkgdir" install-nodist_toolexeclibHEADERS
  fi
  make -C $GPKG_DEV_TARGET/libsanitizer/lsan DESTDIR="$pkgdir" install-nodist_toolexeclibHEADERS

  make -C gcc DESTDIR="$pkgdir" install-man install-info
  rm "$pkgdir"/$GLIBC_PREFIX/share/man/man1/lto-dump.1

  make -C libcpp DESTDIR="$pkgdir" install
  make -C gcc DESTDIR="$pkgdir" install-po

  # many packages expect this symlink
  ln -s gcc "$pkgdir"/$GLIBC_PREFIX/bin/cc

  # POSIX conformance launcher scripts for c89 and c99
  install -Dm755 "$srcdir/c89" "$pkgdir/$GLIBC_PREFIX/bin/c89"
  install -Dm755 "$srcdir/c99" "$pkgdir/$GLIBC_PREFIX/bin/c99"

  # byte-compile python libraries
  python -m compileall "$pkgdir/$GLIBC_PREFIX/share/gcc-${pkgver%%+*}/"
  python -O -m compileall "$pkgdir/$GLIBC_PREFIX/share/gcc-${pkgver%%+*}/"

  # Install Runtime Library Exception
  install -d "$pkgdir/$GLIBC_PREFIX/share/licenses/$pkgname/"
  ln -s $GLIBC_PREFIX/share/licenses/gcc-libs/RUNTIME.LIBRARY.EXCEPTION \
    "$pkgdir/$GLIBC_PREFIX/share/licenses/$pkgname/"

  rm -f "${pkgdir}"/$GLIBC_PREFIX/share/info/dir

  replace_hard_with_symbolic "$pkgdir"

  if [ -d $pkgdir/$GLIBC_PREFIX/lib64 ]; then
    mv $pkgdir/$GLIBC_PREFIX/lib64/* $pkgdir/$GLIBC_PREFIX/lib
    rm -fr $pkgdir/$GLIBC_PREFIX/lib64
  fi

  if [ -d $pkgdir/$GLIBC_PREFIX/lib32 ]; then
    mv $pkgdir/$GLIBC_PREFIX/lib32/* $pkgdir/$GLIBC_PREFIX/lib
    rm -fr $pkgdir/$GLIBC_PREFIX/lib32
  fi
}

